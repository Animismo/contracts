/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { ServiceRegistryV1Storage } from "./ServiceRegistryV1Storage";

export class ServiceRegistryV1StorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ServiceRegistryV1Storage> {
    return super.deploy(overrides || {}) as Promise<ServiceRegistryV1Storage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ServiceRegistryV1Storage {
    return super.attach(address) as ServiceRegistryV1Storage;
  }
  connect(signer: Signer): ServiceRegistryV1StorageFactory {
    return super.connect(signer) as ServiceRegistryV1StorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ServiceRegistryV1Storage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ServiceRegistryV1Storage;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "param",
        type: "string"
      }
    ],
    name: "ParameterUpdated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "controller",
        type: "address"
      }
    ],
    name: "SetController",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    name: "addressCache",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "services",
    outputs: [
      {
        internalType: "string",
        name: "url",
        type: "string"
      },
      {
        internalType: "string",
        name: "geohash",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address"
      }
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610470806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636d966d011461005157806392eefe9b14610155578063dc675a651461017d578063f77c4791146101b6575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b03166101be565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156100b85781810151838201526020016100a0565b50505050905090810190601f1680156100e55780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61017b6004803603602081101561016b57600080fd5b50356001600160a01b03166102fd565b005b61019a6004803603602081101561019357600080fd5b5035610368565b604080516001600160a01b039092168252519081900360200190f35b61019a610383565b600c6020908152600091825260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529092918391908301828280156102555780601f1061022a57610100808354040283529160200191610255565b820191906000526020600020905b81548152906001019060200180831161023857829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102f35780601f106102c8576101008083540402835291602001916102f3565b820191906000526020600020905b8154815290600101906020018083116102d657829003601f168201915b5050505050905082565b6000546001600160a01b0316331461035c576040805162461bcd60e51b815260206004820152601960248201527f43616c6c6572206d75737420626520436f6e74726f6c6c657200000000000000604482015290519081900360640190fd5b61036581610392565b50565b6001602052600090815260409020546001600160a01b031681565b6000546001600160a01b031681565b6001600160a01b0381166103e6576040805162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9bdb1b195c881b5d5cdd081899481cd95d60521b604482015290519081900360640190fd5b600080546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f4ff638452bbf33c012645d18ae6f05515ff5f2d1dfb0cece8cbf018c60903f709181900360200190a15056fea2646970667358221220849233960f0df138c78c8d654334573e8ebeb3adaff6a64dac0358139693ff7364736f6c63430007040033";
