/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { GraphProxyStorage } from "./GraphProxyStorage";

export class GraphProxyStorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<GraphProxyStorage> {
    return super.deploy(overrides || {}) as Promise<GraphProxyStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GraphProxyStorage {
    return super.attach(address) as GraphProxyStorage;
  }
  connect(signer: Signer): GraphProxyStorageFactory {
    return super.connect(signer) as GraphProxyStorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GraphProxyStorage {
    return new Contract(address, _abi, signerOrProvider) as GraphProxyStorage;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAdmin",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminUpdated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldImplementation",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "ImplementationUpdated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldPendingImplementation",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newPendingImplementation",
        type: "address"
      }
    ],
    name: "PendingImplementationUpdated",
    type: "event"
  }
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220813a9e96e117427f34fb947427eaa720b7ed45489ced5c368825cd6ea344a1a964736f6c63430007040033";
