/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ControllerInterface extends ethers.utils.Interface {
  functions: {
    "acceptOwnership()": FunctionFragment;
    "getContractProxy(bytes32)": FunctionFragment;
    "getGovernor()": FunctionFragment;
    "governor()": FunctionFragment;
    "lastPausePartialTime()": FunctionFragment;
    "lastPauseTime()": FunctionFragment;
    "partialPaused()": FunctionFragment;
    "pauseGuardian()": FunctionFragment;
    "paused()": FunctionFragment;
    "pendingGovernor()": FunctionFragment;
    "setContractProxy(bytes32,address)": FunctionFragment;
    "setPartialPaused(bool)": FunctionFragment;
    "setPauseGuardian(address)": FunctionFragment;
    "setPaused(bool)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "unsetContractProxy(bytes32)": FunctionFragment;
    "updateController(bytes32,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "acceptOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getContractProxy",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getGovernor",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "governor", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "lastPausePartialTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "lastPauseTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "partialPaused",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pauseGuardian",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pendingGovernor",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setContractProxy",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setPartialPaused",
    values: [boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setPauseGuardian",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setPaused", values: [boolean]): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "unsetContractProxy",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateController",
    values: [BytesLike, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "acceptOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContractProxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGovernor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "governor", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "lastPausePartialTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lastPauseTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "partialPaused",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pauseGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pendingGovernor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setContractProxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPartialPaused",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPauseGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setPaused", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsetContractProxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateController",
    data: BytesLike
  ): Result;

  events: {
    "NewOwnership(address,address)": EventFragment;
    "NewPauseGuardian(address,address)": EventFragment;
    "NewPendingOwnership(address,address)": EventFragment;
    "PartialPauseChanged(bool)": EventFragment;
    "PauseChanged(bool)": EventFragment;
    "SetContractProxy(bytes32,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "NewOwnership"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewPauseGuardian"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewPendingOwnership"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PartialPauseChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PauseChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetContractProxy"): EventFragment;
}

export class Controller extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ControllerInterface;

  functions: {
    acceptOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "acceptOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    getContractProxy(
      _id: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getContractProxy(bytes32)"(
      _id: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getGovernor(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getGovernor()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    governor(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "governor()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    lastPausePartialTime(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "lastPausePartialTime()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    lastPauseTime(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "lastPauseTime()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    partialPaused(
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "partialPaused()"(
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    pauseGuardian(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "pauseGuardian()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    paused(
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "paused()"(
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    pendingGovernor(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "pendingGovernor()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    setContractProxy(
      _id: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setContractProxy(bytes32,address)"(
      _id: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPartialPaused(
      _partialPaused: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPartialPaused(bool)"(
      _partialPaused: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPauseGuardian(
      _newPauseGuardian: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPauseGuardian(address)"(
      _newPauseGuardian: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPaused(
      _paused: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPaused(bool)"(
      _paused: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferOwnership(
      _newGovernor: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      _newGovernor: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    unsetContractProxy(
      _id: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "unsetContractProxy(bytes32)"(
      _id: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateController(
      _id: BytesLike,
      _controller: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateController(bytes32,address)"(
      _id: BytesLike,
      _controller: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  acceptOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "acceptOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  getContractProxy(_id: BytesLike, overrides?: CallOverrides): Promise<string>;

  "getContractProxy(bytes32)"(
    _id: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getGovernor(overrides?: CallOverrides): Promise<string>;

  "getGovernor()"(overrides?: CallOverrides): Promise<string>;

  governor(overrides?: CallOverrides): Promise<string>;

  "governor()"(overrides?: CallOverrides): Promise<string>;

  lastPausePartialTime(overrides?: CallOverrides): Promise<BigNumber>;

  "lastPausePartialTime()"(overrides?: CallOverrides): Promise<BigNumber>;

  lastPauseTime(overrides?: CallOverrides): Promise<BigNumber>;

  "lastPauseTime()"(overrides?: CallOverrides): Promise<BigNumber>;

  partialPaused(overrides?: CallOverrides): Promise<boolean>;

  "partialPaused()"(overrides?: CallOverrides): Promise<boolean>;

  pauseGuardian(overrides?: CallOverrides): Promise<string>;

  "pauseGuardian()"(overrides?: CallOverrides): Promise<string>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  "paused()"(overrides?: CallOverrides): Promise<boolean>;

  pendingGovernor(overrides?: CallOverrides): Promise<string>;

  "pendingGovernor()"(overrides?: CallOverrides): Promise<string>;

  setContractProxy(
    _id: BytesLike,
    _contractAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setContractProxy(bytes32,address)"(
    _id: BytesLike,
    _contractAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPartialPaused(
    _partialPaused: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPartialPaused(bool)"(
    _partialPaused: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPauseGuardian(
    _newPauseGuardian: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPauseGuardian(address)"(
    _newPauseGuardian: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPaused(
    _paused: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPaused(bool)"(
    _paused: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferOwnership(
    _newGovernor: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    _newGovernor: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  unsetContractProxy(
    _id: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "unsetContractProxy(bytes32)"(
    _id: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateController(
    _id: BytesLike,
    _controller: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateController(bytes32,address)"(
    _id: BytesLike,
    _controller: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    acceptOwnership(overrides?: CallOverrides): Promise<void>;

    "acceptOwnership()"(overrides?: CallOverrides): Promise<void>;

    getContractProxy(
      _id: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "getContractProxy(bytes32)"(
      _id: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getGovernor(overrides?: CallOverrides): Promise<string>;

    "getGovernor()"(overrides?: CallOverrides): Promise<string>;

    governor(overrides?: CallOverrides): Promise<string>;

    "governor()"(overrides?: CallOverrides): Promise<string>;

    lastPausePartialTime(overrides?: CallOverrides): Promise<BigNumber>;

    "lastPausePartialTime()"(overrides?: CallOverrides): Promise<BigNumber>;

    lastPauseTime(overrides?: CallOverrides): Promise<BigNumber>;

    "lastPauseTime()"(overrides?: CallOverrides): Promise<BigNumber>;

    partialPaused(overrides?: CallOverrides): Promise<boolean>;

    "partialPaused()"(overrides?: CallOverrides): Promise<boolean>;

    pauseGuardian(overrides?: CallOverrides): Promise<string>;

    "pauseGuardian()"(overrides?: CallOverrides): Promise<string>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    "paused()"(overrides?: CallOverrides): Promise<boolean>;

    pendingGovernor(overrides?: CallOverrides): Promise<string>;

    "pendingGovernor()"(overrides?: CallOverrides): Promise<string>;

    setContractProxy(
      _id: BytesLike,
      _contractAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setContractProxy(bytes32,address)"(
      _id: BytesLike,
      _contractAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setPartialPaused(
      _partialPaused: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPartialPaused(bool)"(
      _partialPaused: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setPauseGuardian(
      _newPauseGuardian: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPauseGuardian(address)"(
      _newPauseGuardian: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setPaused(_paused: boolean, overrides?: CallOverrides): Promise<void>;

    "setPaused(bool)"(
      _paused: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      _newGovernor: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      _newGovernor: string,
      overrides?: CallOverrides
    ): Promise<void>;

    unsetContractProxy(
      _id: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "unsetContractProxy(bytes32)"(
      _id: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    updateController(
      _id: BytesLike,
      _controller: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateController(bytes32,address)"(
      _id: BytesLike,
      _controller: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    NewOwnership(from: string | null, to: string | null): EventFilter;

    NewPauseGuardian(
      oldPauseGuardian: string | null,
      pauseGuardian: string | null
    ): EventFilter;

    NewPendingOwnership(from: string | null, to: string | null): EventFilter;

    PartialPauseChanged(isPaused: null): EventFilter;

    PauseChanged(isPaused: null): EventFilter;

    SetContractProxy(id: BytesLike | null, contractAddress: null): EventFilter;
  };

  estimateGas: {
    acceptOwnership(overrides?: Overrides): Promise<BigNumber>;

    "acceptOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    getContractProxy(
      _id: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getContractProxy(bytes32)"(
      _id: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGovernor(overrides?: CallOverrides): Promise<BigNumber>;

    "getGovernor()"(overrides?: CallOverrides): Promise<BigNumber>;

    governor(overrides?: CallOverrides): Promise<BigNumber>;

    "governor()"(overrides?: CallOverrides): Promise<BigNumber>;

    lastPausePartialTime(overrides?: CallOverrides): Promise<BigNumber>;

    "lastPausePartialTime()"(overrides?: CallOverrides): Promise<BigNumber>;

    lastPauseTime(overrides?: CallOverrides): Promise<BigNumber>;

    "lastPauseTime()"(overrides?: CallOverrides): Promise<BigNumber>;

    partialPaused(overrides?: CallOverrides): Promise<BigNumber>;

    "partialPaused()"(overrides?: CallOverrides): Promise<BigNumber>;

    pauseGuardian(overrides?: CallOverrides): Promise<BigNumber>;

    "pauseGuardian()"(overrides?: CallOverrides): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    "paused()"(overrides?: CallOverrides): Promise<BigNumber>;

    pendingGovernor(overrides?: CallOverrides): Promise<BigNumber>;

    "pendingGovernor()"(overrides?: CallOverrides): Promise<BigNumber>;

    setContractProxy(
      _id: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setContractProxy(bytes32,address)"(
      _id: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPartialPaused(
      _partialPaused: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPartialPaused(bool)"(
      _partialPaused: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPauseGuardian(
      _newPauseGuardian: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPauseGuardian(address)"(
      _newPauseGuardian: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPaused(_paused: boolean, overrides?: Overrides): Promise<BigNumber>;

    "setPaused(bool)"(
      _paused: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferOwnership(
      _newGovernor: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      _newGovernor: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    unsetContractProxy(
      _id: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "unsetContractProxy(bytes32)"(
      _id: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateController(
      _id: BytesLike,
      _controller: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateController(bytes32,address)"(
      _id: BytesLike,
      _controller: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    acceptOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "acceptOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    getContractProxy(
      _id: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getContractProxy(bytes32)"(
      _id: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGovernor(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getGovernor()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    governor(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "governor()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    lastPausePartialTime(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "lastPausePartialTime()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lastPauseTime(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "lastPauseTime()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    partialPaused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "partialPaused()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pauseGuardian(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "pauseGuardian()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "paused()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pendingGovernor(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "pendingGovernor()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setContractProxy(
      _id: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setContractProxy(bytes32,address)"(
      _id: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPartialPaused(
      _partialPaused: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPartialPaused(bool)"(
      _partialPaused: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPauseGuardian(
      _newPauseGuardian: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPauseGuardian(address)"(
      _newPauseGuardian: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPaused(
      _paused: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPaused(bool)"(
      _paused: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      _newGovernor: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      _newGovernor: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    unsetContractProxy(
      _id: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "unsetContractProxy(bytes32)"(
      _id: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateController(
      _id: BytesLike,
      _controller: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateController(bytes32,address)"(
      _id: BytesLike,
      _controller: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
