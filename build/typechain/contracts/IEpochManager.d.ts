/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IEpochManagerInterface extends ethers.utils.Interface {
  functions: {
    "blockHash(uint256)": FunctionFragment;
    "blockNum()": FunctionFragment;
    "currentEpoch()": FunctionFragment;
    "currentEpochBlock()": FunctionFragment;
    "currentEpochBlockSinceStart()": FunctionFragment;
    "epochsSince(uint256)": FunctionFragment;
    "epochsSinceUpdate()": FunctionFragment;
    "isCurrentEpochRun()": FunctionFragment;
    "runEpoch()": FunctionFragment;
    "setEpochLength(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "blockHash",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "blockNum", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "currentEpoch",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "currentEpochBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "currentEpochBlockSinceStart",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "epochsSince",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "epochsSinceUpdate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isCurrentEpochRun",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "runEpoch", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setEpochLength",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "blockHash", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "blockNum", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "currentEpoch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentEpochBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentEpochBlockSinceStart",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "epochsSince",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "epochsSinceUpdate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCurrentEpochRun",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "runEpoch", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setEpochLength",
    data: BytesLike
  ): Result;

  events: {};
}

export class IEpochManager extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IEpochManagerInterface;

  functions: {
    blockHash(
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "blockHash(uint256)"(
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    blockNum(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "blockNum()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    currentEpoch(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "currentEpoch()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    currentEpochBlock(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "currentEpochBlock()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    currentEpochBlockSinceStart(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "currentEpochBlockSinceStart()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    epochsSince(
      _epoch: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "epochsSince(uint256)"(
      _epoch: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    epochsSinceUpdate(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "epochsSinceUpdate()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    isCurrentEpochRun(
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isCurrentEpochRun()"(
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    runEpoch(overrides?: Overrides): Promise<ContractTransaction>;

    "runEpoch()"(overrides?: Overrides): Promise<ContractTransaction>;

    setEpochLength(
      _epochLength: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setEpochLength(uint256)"(
      _epochLength: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  blockHash(_block: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "blockHash(uint256)"(
    _block: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  blockNum(overrides?: CallOverrides): Promise<BigNumber>;

  "blockNum()"(overrides?: CallOverrides): Promise<BigNumber>;

  currentEpoch(overrides?: CallOverrides): Promise<BigNumber>;

  "currentEpoch()"(overrides?: CallOverrides): Promise<BigNumber>;

  currentEpochBlock(overrides?: CallOverrides): Promise<BigNumber>;

  "currentEpochBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

  currentEpochBlockSinceStart(overrides?: CallOverrides): Promise<BigNumber>;

  "currentEpochBlockSinceStart()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  epochsSince(
    _epoch: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "epochsSince(uint256)"(
    _epoch: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  epochsSinceUpdate(overrides?: CallOverrides): Promise<BigNumber>;

  "epochsSinceUpdate()"(overrides?: CallOverrides): Promise<BigNumber>;

  isCurrentEpochRun(overrides?: CallOverrides): Promise<boolean>;

  "isCurrentEpochRun()"(overrides?: CallOverrides): Promise<boolean>;

  runEpoch(overrides?: Overrides): Promise<ContractTransaction>;

  "runEpoch()"(overrides?: Overrides): Promise<ContractTransaction>;

  setEpochLength(
    _epochLength: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setEpochLength(uint256)"(
    _epochLength: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    blockHash(_block: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "blockHash(uint256)"(
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    blockNum(overrides?: CallOverrides): Promise<BigNumber>;

    "blockNum()"(overrides?: CallOverrides): Promise<BigNumber>;

    currentEpoch(overrides?: CallOverrides): Promise<BigNumber>;

    "currentEpoch()"(overrides?: CallOverrides): Promise<BigNumber>;

    currentEpochBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "currentEpochBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    currentEpochBlockSinceStart(overrides?: CallOverrides): Promise<BigNumber>;

    "currentEpochBlockSinceStart()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    epochsSince(
      _epoch: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "epochsSince(uint256)"(
      _epoch: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    epochsSinceUpdate(overrides?: CallOverrides): Promise<BigNumber>;

    "epochsSinceUpdate()"(overrides?: CallOverrides): Promise<BigNumber>;

    isCurrentEpochRun(overrides?: CallOverrides): Promise<boolean>;

    "isCurrentEpochRun()"(overrides?: CallOverrides): Promise<boolean>;

    runEpoch(overrides?: CallOverrides): Promise<void>;

    "runEpoch()"(overrides?: CallOverrides): Promise<void>;

    setEpochLength(
      _epochLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setEpochLength(uint256)"(
      _epochLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    blockHash(
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "blockHash(uint256)"(
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    blockNum(overrides?: CallOverrides): Promise<BigNumber>;

    "blockNum()"(overrides?: CallOverrides): Promise<BigNumber>;

    currentEpoch(overrides?: CallOverrides): Promise<BigNumber>;

    "currentEpoch()"(overrides?: CallOverrides): Promise<BigNumber>;

    currentEpochBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "currentEpochBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    currentEpochBlockSinceStart(overrides?: CallOverrides): Promise<BigNumber>;

    "currentEpochBlockSinceStart()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    epochsSince(
      _epoch: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "epochsSince(uint256)"(
      _epoch: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    epochsSinceUpdate(overrides?: CallOverrides): Promise<BigNumber>;

    "epochsSinceUpdate()"(overrides?: CallOverrides): Promise<BigNumber>;

    isCurrentEpochRun(overrides?: CallOverrides): Promise<BigNumber>;

    "isCurrentEpochRun()"(overrides?: CallOverrides): Promise<BigNumber>;

    runEpoch(overrides?: Overrides): Promise<BigNumber>;

    "runEpoch()"(overrides?: Overrides): Promise<BigNumber>;

    setEpochLength(
      _epochLength: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setEpochLength(uint256)"(
      _epochLength: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    blockHash(
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "blockHash(uint256)"(
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    blockNum(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "blockNum()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    currentEpoch(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "currentEpoch()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    currentEpochBlock(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "currentEpochBlock()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    currentEpochBlockSinceStart(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "currentEpochBlockSinceStart()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    epochsSince(
      _epoch: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "epochsSince(uint256)"(
      _epoch: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    epochsSinceUpdate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "epochsSinceUpdate()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isCurrentEpochRun(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isCurrentEpochRun()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    runEpoch(overrides?: Overrides): Promise<PopulatedTransaction>;

    "runEpoch()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    setEpochLength(
      _epochLength: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setEpochLength(uint256)"(
      _epochLength: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
