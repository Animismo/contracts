/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { RebatePoolMock } from "./RebatePoolMock";

export class RebatePoolMockFactory extends ContractFactory {
  constructor(
    linkLibraryAddresses: RebatePoolMockLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      RebatePoolMockFactory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: RebatePoolMockLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$407d898cd2d4786fa0cfef3e1797202a79\\$__", "g"),
      linkLibraryAddresses["__$407d898cd2d4786fa0cfef3e1797202a79$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<RebatePoolMock> {
    return super.deploy(overrides || {}) as Promise<RebatePoolMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RebatePoolMock {
    return super.attach(address) as RebatePoolMock;
  }
  connect(signer: Signer): RebatePoolMockFactory {
    return super.connect(signer) as RebatePoolMockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RebatePoolMock {
    return new Contract(address, _abi, signerOrProvider) as RebatePoolMock;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Redeemed",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_indexerFees",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_indexerAllocatedStake",
        type: "uint256"
      }
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "alphaDenominator",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "alphaNumerator",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalRewards",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_totalFees",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_stake",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_totalStake",
        type: "uint256"
      },
      {
        internalType: "uint32",
        name: "_alphaNumerator",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "_alphaDenominator",
        type: "uint32"
      }
    ],
    name: "cobbDouglas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_indexerFees",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_indexerAllocatedStake",
        type: "uint256"
      }
    ],
    name: "pop",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "rebatePool",
    outputs: [
      {
        internalType: "uint256",
        name: "fees",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "effectiveAllocatedStake",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "claimedRewards",
        type: "uint256"
      },
      {
        internalType: "uint32",
        name: "unclaimedAllocationsCount",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "alphaNumerator",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "alphaDenominator",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_alphaNumerator",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "_alphaDenominator",
        type: "uint32"
      }
    ],
    name: "setRebateRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610718806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637ef820701161005b5780637ef82070146100d3578063979f9f5c146100e8578063ce853613146100fb578063f6f0fea5146101035761007d565b80634054f6971461008257806353b1d173146100ab578063771602f7146100be575b600080fd5b6100956100903660046105c7565b61011d565b6040516100a2919061065b565b60405180910390f35b6100956100b93660046105a6565b6101cd565b6100d16100cc3660046105a6565b61021c565b005b6100db61022c565b6040516100a291906106d1565b6100d16100f6366004610629565b610238565b6100db610244565b61010b610258565b6040516100a29695949392919061069d565b60008561012c575060006101c2565b604051634054f69760e01b815273__$407d898cd2d4786fa0cfef3e1797202a79$__90634054f6979061016f908b908b908b908b908b908b908b90600401610664565b60206040518083038186803b15801561018757600080fd5b505af415801561019b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bf919061058e565b90505b979650505050505050565b6000806101dc60018585610284565b90507f82498456531a1065f689ba348ce20bda781238c424cf36748dd40bc282831e038160405161020d919061065b565b60405180910390a19392505050565b610228600183836103aa565b5050565b60005463ffffffff1681565b610228600183836103f6565b600054640100000000900463ffffffff1681565b60015460025460035460045463ffffffff808216916401000000008104821691600160401b9091041686565b825460009081901561036b57845460018601546003870154604051634054f69760e01b815273__$407d898cd2d4786fa0cfef3e1797202a79$__93634054f697936102f59391928a9284928b92909163ffffffff6401000000008204811692600160401b9092041690600401610664565b60206040518083038186803b15801561030d57600080fd5b505af4158015610321573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610345919061058e565b6002860154865491925060009161035b9161043b565b905080821115610369578091505b505b60038501805463ffffffff19811663ffffffff91821660001901821617909155600286015461039c91839061048416565b600286015590509392505050565b82546103b69083610484565b835560018301546103c79082610484565b6001848101919091556003909301805463ffffffff19811663ffffffff91821690950116939093179092555050565b6003909201805463ffffffff938416600160401b026bffffffff000000000000000019949093166401000000000267ffffffff00000000199091161792909216179055565b600061047d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506104de565b9392505050565b60008282018381101561047d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000818484111561056d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561053257818101518382015260200161051a565b50505050905090810190601f16801561055f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b803563ffffffff8116811461058957600080fd5b919050565b60006020828403121561059f578081fd5b5051919050565b600080604083850312156105b8578081fd5b50508035926020909101359150565b600080600080600080600060e0888a0312156105e1578283fd5b873596506020880135955060408801359450606088013593506080880135925061060d60a08901610575565b915061061b60c08901610575565b905092959891949750929550565b6000806040838503121561063b578182fd5b61064483610575565b915061065260208401610575565b90509250929050565b90815260200190565b968752602087019590955260408601939093526060850191909152608084015263ffffffff90811660a08401521660c082015260e00190565b9586526020860194909452604085019290925263ffffffff908116606085015290811660808401521660a082015260c00190565b63ffffffff9190911681526020019056fea264697066735822122012a85e008b5a31b0ac54c20bc47a09e48afc075597ac5e0e4f42c58b1a9ff1f864736f6c63430007040033";

export interface RebatePoolMockLibraryAddresses {
  ["__$407d898cd2d4786fa0cfef3e1797202a79$__"]: string;
}
