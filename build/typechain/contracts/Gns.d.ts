/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface GnsInterface extends ethers.utils.Interface {
  functions: {
    "acceptProxy(address)": FunctionFragment;
    "acceptProxyAndCall(address,bytes)": FunctionFragment;
    "addressCache(bytes32)": FunctionFragment;
    "approveAll()": FunctionFragment;
    "bondingCurve()": FunctionFragment;
    "burnNSignal(address,uint256,uint256,uint256)": FunctionFragment;
    "controller()": FunctionFragment;
    "deprecateSubgraph(address,uint256)": FunctionFragment;
    "erc1056Registry()": FunctionFragment;
    "getCuratorNSignal(address,uint256,address)": FunctionFragment;
    "graphAccountSubgraphNumbers(address)": FunctionFragment;
    "initialize(address,address,address)": FunctionFragment;
    "isPublished(address,uint256)": FunctionFragment;
    "mintNSignal(address,uint256,uint256,uint256)": FunctionFragment;
    "nSignalToTokens(address,uint256,uint256)": FunctionFragment;
    "nSignalToVSignal(address,uint256,uint256)": FunctionFragment;
    "nameSignals(address,uint256)": FunctionFragment;
    "ownerTaxPercentage()": FunctionFragment;
    "publishNewSubgraph(address,bytes32,bytes32,bytes32)": FunctionFragment;
    "publishNewVersion(address,uint256,bytes32,bytes32)": FunctionFragment;
    "setController(address)": FunctionFragment;
    "setDefaultName(address,uint8,bytes32,string)": FunctionFragment;
    "setOwnerTaxPercentage(uint32)": FunctionFragment;
    "subgraphs(address,uint256)": FunctionFragment;
    "tokensToNSignal(address,uint256,uint256)": FunctionFragment;
    "updateSubgraphMetadata(address,uint256,bytes32)": FunctionFragment;
    "vSignalToNSignal(address,uint256,uint256)": FunctionFragment;
    "withdraw(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "acceptProxy", values: [string]): string;
  encodeFunctionData(
    functionFragment: "acceptProxyAndCall",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addressCache",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "approveAll",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "bondingCurve",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "burnNSignal",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "controller",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deprecateSubgraph",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "erc1056Registry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCuratorNSignal",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "graphAccountSubgraphNumbers",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isPublished",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintNSignal",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "nSignalToTokens",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "nSignalToVSignal",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "nameSignals",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerTaxPercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "publishNewSubgraph",
    values: [string, BytesLike, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "publishNewVersion",
    values: [string, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setController",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setDefaultName",
    values: [string, BigNumberish, BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setOwnerTaxPercentage",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "subgraphs",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokensToNSignal",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateSubgraphMetadata",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "vSignalToNSignal",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdraw",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "acceptProxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "acceptProxyAndCall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addressCache",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "approveAll", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "bondingCurve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burnNSignal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "controller", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "deprecateSubgraph",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "erc1056Registry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCuratorNSignal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "graphAccountSubgraphNumbers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isPublished",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintNSignal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nSignalToTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nSignalToVSignal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nameSignals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerTaxPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "publishNewSubgraph",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "publishNewVersion",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setController",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDefaultName",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOwnerTaxPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "subgraphs", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokensToNSignal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateSubgraphMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "vSignalToNSignal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "withdraw", data: BytesLike): Result;

  events: {
    "GRTWithdrawn(address,uint256,address,uint256,uint256)": EventFragment;
    "NSignalBurned(address,uint256,address,uint256,uint256,uint256)": EventFragment;
    "NSignalMinted(address,uint256,address,uint256,uint256,uint256)": EventFragment;
    "NameSignalDisabled(address,uint256,uint256)": EventFragment;
    "NameSignalEnabled(address,uint256,bytes32,uint32)": EventFragment;
    "NameSignalUpgrade(address,uint256,uint256,uint256,bytes32)": EventFragment;
    "ParameterUpdated(string)": EventFragment;
    "SetController(address)": EventFragment;
    "SetDefaultName(address,uint256,bytes32,string)": EventFragment;
    "SubgraphDeprecated(address,uint256)": EventFragment;
    "SubgraphMetadataUpdated(address,uint256,bytes32)": EventFragment;
    "SubgraphPublished(address,uint256,bytes32,bytes32)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GRTWithdrawn"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NSignalBurned"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NSignalMinted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NameSignalDisabled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NameSignalEnabled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NameSignalUpgrade"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ParameterUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetController"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetDefaultName"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SubgraphDeprecated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SubgraphMetadataUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SubgraphPublished"): EventFragment;
}

export class Gns extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: GnsInterface;

  functions: {
    acceptProxy(
      _proxy: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "acceptProxy(address)"(
      _proxy: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    acceptProxyAndCall(
      _proxy: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "acceptProxyAndCall(address,bytes)"(
      _proxy: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    addressCache(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "addressCache(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    approveAll(overrides?: Overrides): Promise<ContractTransaction>;

    "approveAll()"(overrides?: Overrides): Promise<ContractTransaction>;

    bondingCurve(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "bondingCurve()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    burnNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignal: BigNumberish,
      _tokensOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "burnNSignal(address,uint256,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignal: BigNumberish,
      _tokensOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    controller(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "controller()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    deprecateSubgraph(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "deprecateSubgraph(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    erc1056Registry(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "erc1056Registry()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getCuratorNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _curator: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getCuratorNSignal(address,uint256,address)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _curator: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    graphAccountSubgraphNumbers(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "graphAccountSubgraphNumbers(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    initialize(
      _controller: string,
      _bondingCurve: string,
      _didRegistry: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,address,address)"(
      _controller: string,
      _bondingCurve: string,
      _didRegistry: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isPublished(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isPublished(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    mintNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      _nSignalOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "mintNSignal(address,uint256,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      _nSignalOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    nSignalToTokens(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    "nSignalToTokens(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    nSignalToVSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "nSignalToVSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    nameSignals(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vSignal: BigNumber;
      nSignal: BigNumber;
      subgraphDeploymentID: string;
      reserveRatio: number;
      disabled: boolean;
      withdrawableGRT: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: string;
      3: number;
      4: boolean;
      5: BigNumber;
    }>;

    "nameSignals(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vSignal: BigNumber;
      nSignal: BigNumber;
      subgraphDeploymentID: string;
      reserveRatio: number;
      disabled: boolean;
      withdrawableGRT: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: string;
      3: number;
      4: boolean;
      5: BigNumber;
    }>;

    ownerTaxPercentage(
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    "ownerTaxPercentage()"(
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    publishNewSubgraph(
      _graphAccount: string,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "publishNewSubgraph(address,bytes32,bytes32,bytes32)"(
      _graphAccount: string,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    publishNewVersion(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "publishNewVersion(address,uint256,bytes32,bytes32)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setController(
      _controller: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setController(address)"(
      _controller: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setDefaultName(
      _graphAccount: string,
      _nameSystem: BigNumberish,
      _nameIdentifier: BytesLike,
      _name: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setDefaultName(address,uint8,bytes32,string)"(
      _graphAccount: string,
      _nameSystem: BigNumberish,
      _nameIdentifier: BytesLike,
      _name: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setOwnerTaxPercentage(
      _ownerTaxPercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setOwnerTaxPercentage(uint32)"(
      _ownerTaxPercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    subgraphs(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "subgraphs(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tokensToNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "tokensToNSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    updateSubgraphMetadata(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateSubgraphMetadata(address,uint256,bytes32)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    vSignalToNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _vSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "vSignalToNSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _vSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    withdraw(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdraw(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  acceptProxy(
    _proxy: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "acceptProxy(address)"(
    _proxy: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  acceptProxyAndCall(
    _proxy: string,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "acceptProxyAndCall(address,bytes)"(
    _proxy: string,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  addressCache(arg0: BytesLike, overrides?: CallOverrides): Promise<string>;

  "addressCache(bytes32)"(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  approveAll(overrides?: Overrides): Promise<ContractTransaction>;

  "approveAll()"(overrides?: Overrides): Promise<ContractTransaction>;

  bondingCurve(overrides?: CallOverrides): Promise<string>;

  "bondingCurve()"(overrides?: CallOverrides): Promise<string>;

  burnNSignal(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _nSignal: BigNumberish,
    _tokensOutMin: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "burnNSignal(address,uint256,uint256,uint256)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _nSignal: BigNumberish,
    _tokensOutMin: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  controller(overrides?: CallOverrides): Promise<string>;

  "controller()"(overrides?: CallOverrides): Promise<string>;

  deprecateSubgraph(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "deprecateSubgraph(address,uint256)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  erc1056Registry(overrides?: CallOverrides): Promise<string>;

  "erc1056Registry()"(overrides?: CallOverrides): Promise<string>;

  getCuratorNSignal(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _curator: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getCuratorNSignal(address,uint256,address)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _curator: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  graphAccountSubgraphNumbers(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "graphAccountSubgraphNumbers(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  initialize(
    _controller: string,
    _bondingCurve: string,
    _didRegistry: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,address,address)"(
    _controller: string,
    _bondingCurve: string,
    _didRegistry: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isPublished(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isPublished(address,uint256)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  mintNSignal(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _tokensIn: BigNumberish,
    _nSignalOutMin: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "mintNSignal(address,uint256,uint256,uint256)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _tokensIn: BigNumberish,
    _nSignalOutMin: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  nSignalToTokens(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _nSignalIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
  }>;

  "nSignalToTokens(address,uint256,uint256)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _nSignalIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
  }>;

  nSignalToVSignal(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _nSignalIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "nSignalToVSignal(address,uint256,uint256)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _nSignalIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  nameSignals(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    vSignal: BigNumber;
    nSignal: BigNumber;
    subgraphDeploymentID: string;
    reserveRatio: number;
    disabled: boolean;
    withdrawableGRT: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: string;
    3: number;
    4: boolean;
    5: BigNumber;
  }>;

  "nameSignals(address,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    vSignal: BigNumber;
    nSignal: BigNumber;
    subgraphDeploymentID: string;
    reserveRatio: number;
    disabled: boolean;
    withdrawableGRT: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: string;
    3: number;
    4: boolean;
    5: BigNumber;
  }>;

  ownerTaxPercentage(overrides?: CallOverrides): Promise<number>;

  "ownerTaxPercentage()"(overrides?: CallOverrides): Promise<number>;

  publishNewSubgraph(
    _graphAccount: string,
    _subgraphDeploymentID: BytesLike,
    _versionMetadata: BytesLike,
    _subgraphMetadata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "publishNewSubgraph(address,bytes32,bytes32,bytes32)"(
    _graphAccount: string,
    _subgraphDeploymentID: BytesLike,
    _versionMetadata: BytesLike,
    _subgraphMetadata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  publishNewVersion(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _subgraphDeploymentID: BytesLike,
    _versionMetadata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "publishNewVersion(address,uint256,bytes32,bytes32)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _subgraphDeploymentID: BytesLike,
    _versionMetadata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setController(
    _controller: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setController(address)"(
    _controller: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setDefaultName(
    _graphAccount: string,
    _nameSystem: BigNumberish,
    _nameIdentifier: BytesLike,
    _name: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setDefaultName(address,uint8,bytes32,string)"(
    _graphAccount: string,
    _nameSystem: BigNumberish,
    _nameIdentifier: BytesLike,
    _name: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setOwnerTaxPercentage(
    _ownerTaxPercentage: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setOwnerTaxPercentage(uint32)"(
    _ownerTaxPercentage: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  subgraphs(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "subgraphs(address,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  tokensToNSignal(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _tokensIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  "tokensToNSignal(address,uint256,uint256)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _tokensIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  updateSubgraphMetadata(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _subgraphMetadata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateSubgraphMetadata(address,uint256,bytes32)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _subgraphMetadata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  vSignalToNSignal(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _vSignalIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "vSignalToNSignal(address,uint256,uint256)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    _vSignalIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  withdraw(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdraw(address,uint256)"(
    _graphAccount: string,
    _subgraphNumber: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    acceptProxy(_proxy: string, overrides?: CallOverrides): Promise<void>;

    "acceptProxy(address)"(
      _proxy: string,
      overrides?: CallOverrides
    ): Promise<void>;

    acceptProxyAndCall(
      _proxy: string,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "acceptProxyAndCall(address,bytes)"(
      _proxy: string,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    addressCache(arg0: BytesLike, overrides?: CallOverrides): Promise<string>;

    "addressCache(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    approveAll(overrides?: CallOverrides): Promise<void>;

    "approveAll()"(overrides?: CallOverrides): Promise<void>;

    bondingCurve(overrides?: CallOverrides): Promise<string>;

    "bondingCurve()"(overrides?: CallOverrides): Promise<string>;

    burnNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignal: BigNumberish,
      _tokensOutMin: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "burnNSignal(address,uint256,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignal: BigNumberish,
      _tokensOutMin: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    controller(overrides?: CallOverrides): Promise<string>;

    "controller()"(overrides?: CallOverrides): Promise<string>;

    deprecateSubgraph(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "deprecateSubgraph(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    erc1056Registry(overrides?: CallOverrides): Promise<string>;

    "erc1056Registry()"(overrides?: CallOverrides): Promise<string>;

    getCuratorNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _curator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCuratorNSignal(address,uint256,address)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _curator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    graphAccountSubgraphNumbers(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "graphAccountSubgraphNumbers(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _controller: string,
      _bondingCurve: string,
      _didRegistry: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,address,address)"(
      _controller: string,
      _bondingCurve: string,
      _didRegistry: string,
      overrides?: CallOverrides
    ): Promise<void>;

    isPublished(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isPublished(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    mintNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      _nSignalOutMin: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "mintNSignal(address,uint256,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      _nSignalOutMin: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    nSignalToTokens(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    "nSignalToTokens(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    nSignalToVSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "nSignalToVSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    nameSignals(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vSignal: BigNumber;
      nSignal: BigNumber;
      subgraphDeploymentID: string;
      reserveRatio: number;
      disabled: boolean;
      withdrawableGRT: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: string;
      3: number;
      4: boolean;
      5: BigNumber;
    }>;

    "nameSignals(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vSignal: BigNumber;
      nSignal: BigNumber;
      subgraphDeploymentID: string;
      reserveRatio: number;
      disabled: boolean;
      withdrawableGRT: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: string;
      3: number;
      4: boolean;
      5: BigNumber;
    }>;

    ownerTaxPercentage(overrides?: CallOverrides): Promise<number>;

    "ownerTaxPercentage()"(overrides?: CallOverrides): Promise<number>;

    publishNewSubgraph(
      _graphAccount: string,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      _subgraphMetadata: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "publishNewSubgraph(address,bytes32,bytes32,bytes32)"(
      _graphAccount: string,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      _subgraphMetadata: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    publishNewVersion(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "publishNewVersion(address,uint256,bytes32,bytes32)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setController(
      _controller: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setController(address)"(
      _controller: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setDefaultName(
      _graphAccount: string,
      _nameSystem: BigNumberish,
      _nameIdentifier: BytesLike,
      _name: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setDefaultName(address,uint8,bytes32,string)"(
      _graphAccount: string,
      _nameSystem: BigNumberish,
      _nameIdentifier: BytesLike,
      _name: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setOwnerTaxPercentage(
      _ownerTaxPercentage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setOwnerTaxPercentage(uint32)"(
      _ownerTaxPercentage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    subgraphs(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "subgraphs(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    tokensToNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "tokensToNSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    updateSubgraphMetadata(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphMetadata: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateSubgraphMetadata(address,uint256,bytes32)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphMetadata: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    vSignalToNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _vSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "vSignalToNSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _vSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdraw(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdraw(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    GRTWithdrawn(
      graphAccount: string | null,
      subgraphNumber: BigNumberish | null,
      nameCurator: string | null,
      nSignalBurnt: null,
      withdrawnGRT: null
    ): EventFilter;

    NSignalBurned(
      graphAccount: string | null,
      subgraphNumber: BigNumberish | null,
      nameCurator: string | null,
      nSignalBurnt: null,
      vSignalBurnt: null,
      tokensReceived: null
    ): EventFilter;

    NSignalMinted(
      graphAccount: string | null,
      subgraphNumber: BigNumberish | null,
      nameCurator: string | null,
      nSignalCreated: null,
      vSignalCreated: null,
      tokensDeposited: null
    ): EventFilter;

    NameSignalDisabled(
      graphAccount: string | null,
      subgraphNumber: BigNumberish | null,
      withdrawableGRT: null
    ): EventFilter;

    NameSignalEnabled(
      graphAccount: string | null,
      subgraphNumber: BigNumberish | null,
      subgraphDeploymentID: BytesLike | null,
      reserveRatio: null
    ): EventFilter;

    NameSignalUpgrade(
      graphAccount: string | null,
      subgraphNumber: BigNumberish | null,
      newVSignalCreated: null,
      tokensSignalled: null,
      subgraphDeploymentID: BytesLike | null
    ): EventFilter;

    ParameterUpdated(param: null): EventFilter;

    SetController(controller: null): EventFilter;

    SetDefaultName(
      graphAccount: string | null,
      nameSystem: null,
      nameIdentifier: null,
      name: null
    ): EventFilter;

    SubgraphDeprecated(
      graphAccount: string | null,
      subgraphNumber: BigNumberish | null
    ): EventFilter;

    SubgraphMetadataUpdated(
      graphAccount: string | null,
      subgraphNumber: BigNumberish | null,
      subgraphMetadata: null
    ): EventFilter;

    SubgraphPublished(
      graphAccount: string | null,
      subgraphNumber: BigNumberish | null,
      subgraphDeploymentID: BytesLike | null,
      versionMetadata: null
    ): EventFilter;
  };

  estimateGas: {
    acceptProxy(_proxy: string, overrides?: Overrides): Promise<BigNumber>;

    "acceptProxy(address)"(
      _proxy: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    acceptProxyAndCall(
      _proxy: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "acceptProxyAndCall(address,bytes)"(
      _proxy: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    addressCache(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "addressCache(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approveAll(overrides?: Overrides): Promise<BigNumber>;

    "approveAll()"(overrides?: Overrides): Promise<BigNumber>;

    bondingCurve(overrides?: CallOverrides): Promise<BigNumber>;

    "bondingCurve()"(overrides?: CallOverrides): Promise<BigNumber>;

    burnNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignal: BigNumberish,
      _tokensOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "burnNSignal(address,uint256,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignal: BigNumberish,
      _tokensOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    controller(overrides?: CallOverrides): Promise<BigNumber>;

    "controller()"(overrides?: CallOverrides): Promise<BigNumber>;

    deprecateSubgraph(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "deprecateSubgraph(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    erc1056Registry(overrides?: CallOverrides): Promise<BigNumber>;

    "erc1056Registry()"(overrides?: CallOverrides): Promise<BigNumber>;

    getCuratorNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _curator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCuratorNSignal(address,uint256,address)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _curator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    graphAccountSubgraphNumbers(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "graphAccountSubgraphNumbers(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _controller: string,
      _bondingCurve: string,
      _didRegistry: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,address,address)"(
      _controller: string,
      _bondingCurve: string,
      _didRegistry: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isPublished(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isPublished(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      _nSignalOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "mintNSignal(address,uint256,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      _nSignalOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    nSignalToTokens(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "nSignalToTokens(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    nSignalToVSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "nSignalToVSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    nameSignals(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "nameSignals(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ownerTaxPercentage(overrides?: CallOverrides): Promise<BigNumber>;

    "ownerTaxPercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

    publishNewSubgraph(
      _graphAccount: string,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "publishNewSubgraph(address,bytes32,bytes32,bytes32)"(
      _graphAccount: string,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    publishNewVersion(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "publishNewVersion(address,uint256,bytes32,bytes32)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setController(
      _controller: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setController(address)"(
      _controller: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setDefaultName(
      _graphAccount: string,
      _nameSystem: BigNumberish,
      _nameIdentifier: BytesLike,
      _name: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setDefaultName(address,uint8,bytes32,string)"(
      _graphAccount: string,
      _nameSystem: BigNumberish,
      _nameIdentifier: BytesLike,
      _name: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setOwnerTaxPercentage(
      _ownerTaxPercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setOwnerTaxPercentage(uint32)"(
      _ownerTaxPercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    subgraphs(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "subgraphs(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokensToNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokensToNSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateSubgraphMetadata(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateSubgraphMetadata(address,uint256,bytes32)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    vSignalToNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _vSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "vSignalToNSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _vSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdraw(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdraw(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    acceptProxy(
      _proxy: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "acceptProxy(address)"(
      _proxy: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    acceptProxyAndCall(
      _proxy: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "acceptProxyAndCall(address,bytes)"(
      _proxy: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    addressCache(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "addressCache(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approveAll(overrides?: Overrides): Promise<PopulatedTransaction>;

    "approveAll()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    bondingCurve(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "bondingCurve()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    burnNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignal: BigNumberish,
      _tokensOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "burnNSignal(address,uint256,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignal: BigNumberish,
      _tokensOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    controller(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "controller()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    deprecateSubgraph(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "deprecateSubgraph(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    erc1056Registry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "erc1056Registry()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCuratorNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _curator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCuratorNSignal(address,uint256,address)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _curator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    graphAccountSubgraphNumbers(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "graphAccountSubgraphNumbers(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _controller: string,
      _bondingCurve: string,
      _didRegistry: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,address,address)"(
      _controller: string,
      _bondingCurve: string,
      _didRegistry: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isPublished(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isPublished(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mintNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      _nSignalOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "mintNSignal(address,uint256,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      _nSignalOutMin: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    nSignalToTokens(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "nSignalToTokens(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    nSignalToVSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "nSignalToVSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _nSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    nameSignals(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "nameSignals(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ownerTaxPercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ownerTaxPercentage()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    publishNewSubgraph(
      _graphAccount: string,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "publishNewSubgraph(address,bytes32,bytes32,bytes32)"(
      _graphAccount: string,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    publishNewVersion(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "publishNewVersion(address,uint256,bytes32,bytes32)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphDeploymentID: BytesLike,
      _versionMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setController(
      _controller: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setController(address)"(
      _controller: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setDefaultName(
      _graphAccount: string,
      _nameSystem: BigNumberish,
      _nameIdentifier: BytesLike,
      _name: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setDefaultName(address,uint8,bytes32,string)"(
      _graphAccount: string,
      _nameSystem: BigNumberish,
      _nameIdentifier: BytesLike,
      _name: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setOwnerTaxPercentage(
      _ownerTaxPercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setOwnerTaxPercentage(uint32)"(
      _ownerTaxPercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    subgraphs(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "subgraphs(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokensToNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokensToNSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _tokensIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateSubgraphMetadata(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateSubgraphMetadata(address,uint256,bytes32)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _subgraphMetadata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    vSignalToNSignal(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _vSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "vSignalToNSignal(address,uint256,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      _vSignalIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdraw(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdraw(address,uint256)"(
      _graphAccount: string,
      _subgraphNumber: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
