/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface LibCobbDouglasInterface extends ethers.utils.Interface {
  functions: {
    "cobbDouglas(uint256,uint256,uint256,uint256,uint256,uint32,uint32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "cobbDouglas",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "cobbDouglas",
    data: BytesLike
  ): Result;

  events: {};
}

export class LibCobbDouglas extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: LibCobbDouglasInterface;

  functions: {
    cobbDouglas(
      totalRewards: BigNumberish,
      fees: BigNumberish,
      totalFees: BigNumberish,
      stake: BigNumberish,
      totalStake: BigNumberish,
      alphaNumerator: BigNumberish,
      alphaDenominator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      rewards: BigNumber;
      0: BigNumber;
    }>;

    "cobbDouglas(uint256,uint256,uint256,uint256,uint256,uint32,uint32)"(
      totalRewards: BigNumberish,
      fees: BigNumberish,
      totalFees: BigNumberish,
      stake: BigNumberish,
      totalStake: BigNumberish,
      alphaNumerator: BigNumberish,
      alphaDenominator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      rewards: BigNumber;
      0: BigNumber;
    }>;
  };

  cobbDouglas(
    totalRewards: BigNumberish,
    fees: BigNumberish,
    totalFees: BigNumberish,
    stake: BigNumberish,
    totalStake: BigNumberish,
    alphaNumerator: BigNumberish,
    alphaDenominator: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "cobbDouglas(uint256,uint256,uint256,uint256,uint256,uint32,uint32)"(
    totalRewards: BigNumberish,
    fees: BigNumberish,
    totalFees: BigNumberish,
    stake: BigNumberish,
    totalStake: BigNumberish,
    alphaNumerator: BigNumberish,
    alphaDenominator: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    cobbDouglas(
      totalRewards: BigNumberish,
      fees: BigNumberish,
      totalFees: BigNumberish,
      stake: BigNumberish,
      totalStake: BigNumberish,
      alphaNumerator: BigNumberish,
      alphaDenominator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "cobbDouglas(uint256,uint256,uint256,uint256,uint256,uint32,uint32)"(
      totalRewards: BigNumberish,
      fees: BigNumberish,
      totalFees: BigNumberish,
      stake: BigNumberish,
      totalStake: BigNumberish,
      alphaNumerator: BigNumberish,
      alphaDenominator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    cobbDouglas(
      totalRewards: BigNumberish,
      fees: BigNumberish,
      totalFees: BigNumberish,
      stake: BigNumberish,
      totalStake: BigNumberish,
      alphaNumerator: BigNumberish,
      alphaDenominator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "cobbDouglas(uint256,uint256,uint256,uint256,uint256,uint32,uint32)"(
      totalRewards: BigNumberish,
      fees: BigNumberish,
      totalFees: BigNumberish,
      stake: BigNumberish,
      totalStake: BigNumberish,
      alphaNumerator: BigNumberish,
      alphaDenominator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    cobbDouglas(
      totalRewards: BigNumberish,
      fees: BigNumberish,
      totalFees: BigNumberish,
      stake: BigNumberish,
      totalStake: BigNumberish,
      alphaNumerator: BigNumberish,
      alphaDenominator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "cobbDouglas(uint256,uint256,uint256,uint256,uint256,uint32,uint32)"(
      totalRewards: BigNumberish,
      fees: BigNumberish,
      totalFees: BigNumberish,
      stake: BigNumberish,
      totalStake: BigNumberish,
      alphaNumerator: BigNumberish,
      alphaDenominator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
