/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import { IRewardsManager } from "./IRewardsManager";

export class IRewardsManagerFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRewardsManager {
    return new Contract(address, _abi, signerOrProvider) as IRewardsManager;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_subgraphDeploymentID",
        type: "bytes32"
      }
    ],
    name: "getAccRewardsForSubgraph",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_subgraphDeploymentID",
        type: "bytes32"
      }
    ],
    name: "getAccRewardsPerAllocatedToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getAccRewardsPerSignal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getNewRewardsPerSignal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_allocationID",
        type: "address"
      }
    ],
    name: "getRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_subgraphDeploymentID",
        type: "bytes32"
      }
    ],
    name: "isDenied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_subgraphDeploymentID",
        type: "bytes32"
      }
    ],
    name: "onSubgraphAllocationUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_subgraphDeploymentID",
        type: "bytes32"
      }
    ],
    name: "onSubgraphSignalUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_subgraphDeploymentID",
        type: "bytes32"
      },
      {
        internalType: "bool",
        name: "_deny",
        type: "bool"
      }
    ],
    name: "setDenied",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_subgraphDeploymentID",
        type: "bytes32[]"
      },
      {
        internalType: "bool[]",
        name: "_deny",
        type: "bool[]"
      }
    ],
    name: "setDeniedMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_issuanceRate",
        type: "uint256"
      }
    ],
    name: "setIssuanceRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_subgraphAvailabilityOracle",
        type: "address"
      }
    ],
    name: "setSubgraphAvailabilityOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_allocationID",
        type: "address"
      }
    ],
    name: "takeRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "updateAccRewardsPerSignal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];
